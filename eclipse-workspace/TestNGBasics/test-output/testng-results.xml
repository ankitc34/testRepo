<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="1" total="8" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="189" started-at="2019-11-07T10:22:44 IST" finished-at="2019-11-07T10:22:44 IST">
    <groups>
      <group name="runtime">
        <method signature="testNGAnnotation.test3()[pri:0, instance:testNGPart1.testNGAnnotation@1552920]" name="test3" class="testNGPart1.testNGAnnotation"/>
        <method signature="testNGAnnotation.test4()[pri:6, instance:testNGPart1.testNGAnnotation@1552920]" name="test4" class="testNGPart1.testNGAnnotation"/>
        <method signature="testNGAnnotation.test5()[pri:6, instance:testNGPart1.testNGAnnotation@1552920]" name="test5" class="testNGPart1.testNGAnnotation"/>
        <method signature="testNGAnnotation.test6()[pri:-11, instance:testNGPart1.testNGAnnotation@1552920]" name="test6" class="testNGPart1.testNGAnnotation"/>
      </group> <!-- runtime -->
    </groups>
    <test name="Default test" duration-ms="189" started-at="2019-11-07T10:22:44 IST" finished-at="2019-11-07T10:22:44 IST">
      <class name="testNGPart1.testNGAnnotation">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:testNGPart1.testNGAnnotation@1552920]" name="beforeSuite" is-config="true" duration-ms="31" started-at="2019-11-07T10:22:44 IST" finished-at="2019-11-07T10:22:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:testNGPart1.testNGAnnotation@1552920]" name="beforeTest" is-config="true" duration-ms="1" started-at="2019-11-07T10:22:44 IST" finished-at="2019-11-07T10:22:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testNGPart1.testNGAnnotation@1552920]" name="beforeClass" is-config="true" duration-ms="1" started-at="2019-11-07T10:22:44 IST" finished-at="2019-11-07T10:22:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testNGPart1.testNGAnnotation@1552920]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-07T10:22:44 IST" finished-at="2019-11-07T10:22:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test6()[pri:-11, instance:testNGPart1.testNGAnnotation@1552920]" name="test6" duration-ms="10" started-at="2019-11-07T10:22:44 IST" finished-at="2019-11-07T10:22:44 IST">
          <exception class="java.lang.NumberFormatException">
            <message>
              <![CDATA[For input string: "100A-0"]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NumberFormatException: For input string: "100A-0"
at java.lang.NumberFormatException.forInputString(Unknown Source)
at java.lang.Integer.parseInt(Unknown Source)
at java.lang.Integer.parseInt(Unknown Source)
at testNGPart1.testNGAnnotation.test6(testNGAnnotation.java:74)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NumberFormatException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test6 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testNGPart1.testNGAnnotation@1552920]" name="afterMethod" is-config="true" duration-ms="0" started-at="2019-11-07T10:22:44 IST" finished-at="2019-11-07T10:22:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="test1()[pri:0, instance:testNGPart1.testNGAnnotation@1552920]" name="test1" duration-ms="18" started-at="2019-11-07T10:22:44 IST" finished-at="2019-11-07T10:22:44 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [test2] but found [test1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [test2] but found [test1]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at testNGPart1.testNGAnnotation.test1(testNGAnnotation.java:41)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testNGPart1.testNGAnnotation@1552920]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-07T10:22:44 IST" finished-at="2019-11-07T10:22:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testNGPart1.testNGAnnotation@1552920]" name="afterMethod" is-config="true" duration-ms="1" started-at="2019-11-07T10:22:44 IST" finished-at="2019-11-07T10:22:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="test3()[pri:0, instance:testNGPart1.testNGAnnotation@1552920]" name="test3" duration-ms="4" started-at="2019-11-07T10:22:44 IST" finished-at="2019-11-07T10:22:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testNGPart1.testNGAnnotation@1552920]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-07T10:22:44 IST" finished-at="2019-11-07T10:22:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testNGPart1.testNGAnnotation@1552920]" name="afterMethod" is-config="true" duration-ms="0" started-at="2019-11-07T10:22:44 IST" finished-at="2019-11-07T10:22:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="test4()[pri:6, instance:testNGPart1.testNGAnnotation@1552920]" name="test4" duration-ms="4" started-at="2019-11-07T10:22:44 IST" finished-at="2019-11-07T10:22:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testNGPart1.testNGAnnotation@1552920]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-07T10:22:44 IST" finished-at="2019-11-07T10:22:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testNGPart1.testNGAnnotation@1552920]" name="afterMethod" is-config="true" duration-ms="1" started-at="2019-11-07T10:22:44 IST" finished-at="2019-11-07T10:22:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testNGPart1.testNGAnnotation@1552920]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-07T10:22:44 IST" finished-at="2019-11-07T10:22:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4()[pri:6, instance:testNGPart1.testNGAnnotation@1552920]" name="test4" duration-ms="2" started-at="2019-11-07T10:22:44 IST" finished-at="2019-11-07T10:22:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testNGPart1.testNGAnnotation@1552920]" name="afterMethod" is-config="true" duration-ms="1" started-at="2019-11-07T10:22:44 IST" finished-at="2019-11-07T10:22:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testNGPart1.testNGAnnotation@1552920]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-11-07T10:22:44 IST" finished-at="2019-11-07T10:22:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4()[pri:6, instance:testNGPart1.testNGAnnotation@1552920]" name="test4" duration-ms="2" started-at="2019-11-07T10:22:44 IST" finished-at="2019-11-07T10:22:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testNGPart1.testNGAnnotation@1552920]" name="afterMethod" is-config="true" duration-ms="0" started-at="2019-11-07T10:22:44 IST" finished-at="2019-11-07T10:22:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testNGPart1.testNGAnnotation@1552920]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-11-07T10:22:44 IST" finished-at="2019-11-07T10:22:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test5()[pri:6, instance:testNGPart1.testNGAnnotation@1552920]" name="test5" duration-ms="17" started-at="2019-11-07T10:22:44 IST" finished-at="2019-11-07T10:22:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testNGPart1.testNGAnnotation@1552920]" name="afterMethod" is-config="true" duration-ms="0" started-at="2019-11-07T10:22:44 IST" finished-at="2019-11-07T10:22:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="aftertest()[pri:0, instance:testNGPart1.testNGAnnotation@1552920]" name="aftertest" is-config="true" duration-ms="1" started-at="2019-11-07T10:22:44 IST" finished-at="2019-11-07T10:22:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftertest -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testNGPart1.testNGAnnotation@1552920]" name="afterClass" is-config="true" duration-ms="0" started-at="2019-11-07T10:22:44 IST" finished-at="2019-11-07T10:22:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:testNGPart1.testNGAnnotation@1552920]" name="afterSuite" is-config="true" duration-ms="0" started-at="2019-11-07T10:22:44 IST" finished-at="2019-11-07T10:22:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- testNGPart1.testNGAnnotation -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
